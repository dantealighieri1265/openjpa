<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>OpenJPA Maven Plugin</name>
  <description>OpenJPA tasks for enhancing, SQL creation and schema mapping creation using
        Apache maven (see http://maven.apache.org).</description>
  <groupId>org.apache.openjpa</groupId>
  <artifactId>openjpa-maven-plugin</artifactId>
  <version>3.1.3-SNAPSHOT</version>
  <goalPrefix>openjpa</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>enhance</goal>
      <description>Processes Application model classes and enhances them by running OpenJPA
Enhancer tool.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.openjpa.tools.maven.OpenJpaEnhancerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>addDefaultConstructor</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The JPA spec requires that all persistent classes define a no-arg constructor.
This flag tells the enhancer whether to add a protected no-arg constructor
to any persistent classes that don&apos;t already have one.</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location where &lt;code&gt;persistence-enabled&lt;/code&gt; classes are located.</description>
        </parameter>
        <parameter>
          <name>compileClasspathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of all class path elements that will be searched for the
&lt;code&gt;persistence-enabled&lt;/code&gt; classes and resources expected by
PCEnhancer.</description>
        </parameter>
        <parameter>
          <name>connectionDriverName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;This setting can be used to override any openjpa.ConnectionDriverName set in the
persistence.xml. It can also be used if the persistence.xml contains no connection
information at all.&lt;P&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionDriverName&amp;gt;com.mchange.v2.c3p0.ComboPooledDataSource&amp;lt;/connectionDriverName&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionProperties}.</description>
        </parameter>
        <parameter>
          <name>connectionProperties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;Used to define the credentials or any other connection properties.&lt;/p&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionProperties&amp;gt;
  driverClass=com.mysql.jdbc.Driver,
  jdbcUrl=jdbc:mysql://localhost/mydatabase,
  user=root,
  password=,
  minPoolSize=5,
  acquireRetryAttempts=3,
  maxPoolSize=20
&amp;lt;/connectionProperties&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionDriverName}.</description>
        </parameter>
        <parameter>
          <name>enforcePropertyRestrictions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to throw an exception when it appears that a property access entity
is not obeying the restrictions placed on property access.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of excludes to scan searchDir to pass to the jobs.
This option may be used to stop OpenJPA tasks from scanning non-JPA classes
(which usually leads to warnings such as &quot;Type xxx has no metadata&quot;)</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would get skipped usually.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of includes to scan searchDir to pass to the jobs.
This may be used to restrict the OpenJPA tasks to e.g. a single package which
contains all the entities.</description>
        </parameter>
        <parameter>
          <name>persistenceUnitName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional PersistenceUnit name.
If not specified then OpenJPA will run against &apos;all anchors&apos;.
Means it will use all persistenceunits of all persistence.xml files it finds.</description>
        </parameter>
        <parameter>
          <name>persistenceXmlFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Used if a non-default file location for the persistence.xml should be used
If not specified, the default one in META-INF/persistence.xml will be used.
Since openjpa-2.3.0 this can also be a resource location. In prior releases
it was only possible to specify a file location.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
        <parameter>
          <name>tmpClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tell the PCEnhancer to use a temporary classloader for enhancement.
If you enable this feature, then no depending artifacts from the classpath will be used!
Please note that you have to disable the tmpClassLoader for some cases in OpenJPA-1.2.1
due to an extended parsing strategy.</description>
        </parameter>
        <parameter>
          <name>toolProperties</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional properties passed to the OpenJPA tools.</description>
        </parameter>
        <parameter>
          <name>workDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The working directory for putting persistence.xml and
other stuff into if we need to.</description>
        </parameter>
      </parameters>
      <configuration>
        <addDefaultConstructor implementation="boolean" default-value="true"/>
        <classes implementation="java.io.File" default-value="${project.build.outputDirectory}">${openjpa.classes}</classes>
        <compileClasspathElements implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <enforcePropertyRestrictions implementation="boolean" default-value="false"/>
        <forceMojoExecution implementation="boolean" default-value="false">${forceOpenJpaExecution}</forceMojoExecution>
        <includes implementation="java.lang.String" default-value="**/*.class"/>
        <persistenceUnitName implementation="java.lang.String" default-value="${openjpa.persistenceUnitName}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false"/>
        <tmpClassLoader implementation="boolean" default-value="false"/>
        <workDir implementation="java.io.File" default-value="${project.build.directory}/openjpa-work">${openjpa.workdir}</workDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on openjpa-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn openjpa:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.openjpa.tools.maven.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>schema</goal>
      <description>Executes the schema generation via the OpenJPA MappingTool.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.openjpa.tools.maven.OpenJpaSchemaMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>action</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Argument to specify the action to take on each class. The available actions are:
buildSchema, validate</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location where &lt;code&gt;persistence-enabled&lt;/code&gt; classes are located.</description>
        </parameter>
        <parameter>
          <name>compileClasspathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of all class path elements that will be searched for the
&lt;code&gt;persistence-enabled&lt;/code&gt; classes and resources expected by
PCEnhancer.</description>
        </parameter>
        <parameter>
          <name>connectionDriverName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;This setting can be used to override any openjpa.ConnectionDriverName set in the
persistence.xml. It can also be used if the persistence.xml contains no connection
information at all.&lt;P&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionDriverName&amp;gt;com.mchange.v2.c3p0.ComboPooledDataSource&amp;lt;/connectionDriverName&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionProperties}.</description>
        </parameter>
        <parameter>
          <name>connectionProperties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;Used to define the credentials or any other connection properties.&lt;/p&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionProperties&amp;gt;
  driverClass=com.mysql.jdbc.Driver,
  jdbcUrl=jdbc:mysql://localhost/mydatabase,
  user=root,
  password=,
  minPoolSize=5,
  acquireRetryAttempts=3,
  maxPoolSize=20
&amp;lt;/connectionProperties&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionDriverName}.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of excludes to scan searchDir to pass to the jobs.
This option may be used to stop OpenJPA tasks from scanning non-JPA classes
(which usually leads to warnings such as &quot;Type xxx has no metadata&quot;)</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would get skipped usually.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of includes to scan searchDir to pass to the jobs.
This may be used to restrict the OpenJPA tasks to e.g. a single package which
contains all the entities.</description>
        </parameter>
        <parameter>
          <name>persistenceUnitName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional PersistenceUnit name.
If not specified then OpenJPA will run against &apos;all anchors&apos;.
Means it will use all persistenceunits of all persistence.xml files it finds.</description>
        </parameter>
        <parameter>
          <name>persistenceXmlFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Used if a non-default file location for the persistence.xml should be used
If not specified, the default one in META-INF/persistence.xml will be used.
Since openjpa-2.3.0 this can also be a resource location. In prior releases
it was only possible to specify a file location.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>schemaAction</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The action to take on the schema.
Actions can be composed in a comma-separated list of one of the following items:
&lt;ul&gt;
&lt;li&gt;add (see MappingTool#ACTION_ADD)&lt;/li&gt;
&lt;li&gt;refresh (see MappingTool#ACTION_REFRESH)&lt;/li&gt;
&lt;li&gt;drop (see MappingTool#ACTION_DROP)&lt;/li&gt;
&lt;li&gt;dropSchema (see MappingTool#ACTION_DROP_SCHEMA)&lt;/li&gt;
&lt;li&gt;buildSchema (see MappingTool#ACTION_BUILD_SCHEMA)&lt;/li&gt;
&lt;li&gt;import (see MappingTool#ACTION_IMPORT)&lt;/li&gt;
&lt;li&gt;export (see MappingTool#ACTION_EXPORT)&lt;/li&gt;
&lt;li&gt;validate (see MappingTool#ACTION_VALIDATE)&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>schemaFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this option to write the planned schema to an XML document
rather than modify the database. The document can then be manipulated and
committed to the database with the schema tool</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
        <parameter>
          <name>toolProperties</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional properties passed to the OpenJPA tools.</description>
        </parameter>
        <parameter>
          <name>workDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The working directory for putting persistence.xml and
other stuff into if we need to.</description>
        </parameter>
      </parameters>
      <configuration>
        <classes implementation="java.io.File" default-value="${project.build.outputDirectory}">${openjpa.classes}</classes>
        <compileClasspathElements implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <forceMojoExecution implementation="boolean" default-value="false">${forceOpenJpaExecution}</forceMojoExecution>
        <includes implementation="java.lang.String" default-value="**/*.class"/>
        <persistenceUnitName implementation="java.lang.String" default-value="${openjpa.persistenceUnitName}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <schemaAction implementation="java.lang.String" default-value="add"/>
        <schemaFile implementation="java.io.File" default-value="${project.build.directory}/schema.xml"/>
        <skip implementation="boolean" default-value="false"/>
        <workDir implementation="java.io.File" default-value="${project.build.directory}/openjpa-work">${openjpa.workdir}</workDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>sql</goal>
      <description>Executes the SQL generation via the OpenJPA MappingTool.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.openjpa.tools.maven.OpenJpaSqlMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>action</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Argument to specify the action to take on each class. The available actions are:
buildSchema, validate</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location where &lt;code&gt;persistence-enabled&lt;/code&gt; classes are located.</description>
        </parameter>
        <parameter>
          <name>compileClasspathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of all class path elements that will be searched for the
&lt;code&gt;persistence-enabled&lt;/code&gt; classes and resources expected by
PCEnhancer.</description>
        </parameter>
        <parameter>
          <name>connectionDriverName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;This setting can be used to override any openjpa.ConnectionDriverName set in the
persistence.xml. It can also be used if the persistence.xml contains no connection
information at all.&lt;P&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionDriverName&amp;gt;com.mchange.v2.c3p0.ComboPooledDataSource&amp;lt;/connectionDriverName&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionProperties}.</description>
        </parameter>
        <parameter>
          <name>connectionProperties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;Used to define the credentials or any other connection properties.&lt;/p&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionProperties&amp;gt;
  driverClass=com.mysql.jdbc.Driver,
  jdbcUrl=jdbc:mysql://localhost/mydatabase,
  user=root,
  password=,
  minPoolSize=5,
  acquireRetryAttempts=3,
  maxPoolSize=20
&amp;lt;/connectionProperties&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionDriverName}.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of excludes to scan searchDir to pass to the jobs.
This option may be used to stop OpenJPA tasks from scanning non-JPA classes
(which usually leads to warnings such as &quot;Type xxx has no metadata&quot;)</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would get skipped usually.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of includes to scan searchDir to pass to the jobs.
This may be used to restrict the OpenJPA tasks to e.g. a single package which
contains all the entities.</description>
        </parameter>
        <parameter>
          <name>modifyDatabase</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this option to write the planned schema modifications to
the database. If this is set, the sqlFile setting (if any) will
be ignored.</description>
        </parameter>
        <parameter>
          <name>persistenceUnitName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional PersistenceUnit name.
If not specified then OpenJPA will run against &apos;all anchors&apos;.
Means it will use all persistenceunits of all persistence.xml files it finds.</description>
        </parameter>
        <parameter>
          <name>persistenceXmlFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Used if a non-default file location for the persistence.xml should be used
If not specified, the default one in META-INF/persistence.xml will be used.
Since openjpa-2.3.0 this can also be a resource location. In prior releases
it was only possible to specify a file location.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
        <parameter>
          <name>sqlAction</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The action to take for generating the SQL.
Actions can be composed in a comma-separated list of one of the following items:
&lt;ul&gt;
&lt;li&gt;add (see MappingTool#ACTION_ADD)&lt;/li&gt;
&lt;li&gt;refresh (see MappingTool#ACTION_REFRESH)&lt;/li&gt;
&lt;li&gt;drop (see MappingTool#ACTION_DROP)&lt;/li&gt;
&lt;li&gt;dropSchema (see MappingTool#ACTION_DROP_SCHEMA)&lt;/li&gt;
&lt;li&gt;buildSchema (see MappingTool#ACTION_BUILD_SCHEMA)&lt;/li&gt;
&lt;li&gt;import (see MappingTool#ACTION_IMPORT)&lt;/li&gt;
&lt;li&gt;export (see MappingTool#ACTION_EXPORT)&lt;/li&gt;
&lt;li&gt;validate (see MappingTool#ACTION_VALIDATE)&lt;/li&gt;
&lt;/ul&gt;
Technically this is the same like the {@code schemaAction}, but we have to
split it for the plugin to allow different actions for generating the mapping
and generating the SQL files.</description>
        </parameter>
        <parameter>
          <name>sqlFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this option to write the planned schema modifications to a SQL
script. Combine this with a schemaAction
of &quot;build&quot; to generate a script that recreates the schema for the
current mappings, even if the schema already exists.</description>
        </parameter>
        <parameter>
          <name>toolProperties</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional properties passed to the OpenJPA tools.</description>
        </parameter>
        <parameter>
          <name>workDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The working directory for putting persistence.xml and
other stuff into if we need to.</description>
        </parameter>
      </parameters>
      <configuration>
        <classes implementation="java.io.File" default-value="${project.build.outputDirectory}">${openjpa.classes}</classes>
        <compileClasspathElements implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <forceMojoExecution implementation="boolean" default-value="false">${forceOpenJpaExecution}</forceMojoExecution>
        <includes implementation="java.lang.String" default-value="**/*.class"/>
        <modifyDatabase implementation="boolean" default-value="false"/>
        <persistenceUnitName implementation="java.lang.String" default-value="${openjpa.persistenceUnitName}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false"/>
        <sqlAction implementation="java.lang.String" default-value="build"/>
        <sqlFile implementation="java.io.File" default-value="${project.build.directory}/database.sql"/>
        <workDir implementation="java.io.File" default-value="${project.build.directory}/openjpa-work">${openjpa.workdir}</workDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>test-enhance</goal>
      <description>Processes Application model test classes and enhances them by running OpenJPA
Enhancer tool.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-test-classes</phase>
      <implementation>org.apache.openjpa.tools.maven.OpenJpaTestEnhancerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.1</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>addDefaultConstructor</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The JPA spec requires that all persistent classes define a no-arg constructor.
This flag tells the enhancer whether to add a protected no-arg constructor
to any persistent classes that don&apos;t already have one.</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location where &lt;code&gt;persistence-enabled&lt;/code&gt; classes are located.</description>
        </parameter>
        <parameter>
          <name>compileClasspathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of all class path elements that will be searched for the
&lt;code&gt;persistence-enabled&lt;/code&gt; classes and resources expected by
PCEnhancer.</description>
        </parameter>
        <parameter>
          <name>connectionDriverName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;This setting can be used to override any openjpa.ConnectionDriverName set in the
persistence.xml. It can also be used if the persistence.xml contains no connection
information at all.&lt;P&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionDriverName&amp;gt;com.mchange.v2.c3p0.ComboPooledDataSource&amp;lt;/connectionDriverName&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionProperties}.</description>
        </parameter>
        <parameter>
          <name>connectionProperties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;Used to define the credentials or any other connection properties.&lt;/p&gt;

Sample:
&lt;pre&gt;
&amp;lt;connectionProperties&amp;gt;
  driverClass=com.mysql.jdbc.Driver,
  jdbcUrl=jdbc:mysql://localhost/mydatabase,
  user=root,
  password=,
  minPoolSize=5,
  acquireRetryAttempts=3,
  maxPoolSize=20
&amp;lt;/connectionProperties&amp;gt;
&lt;/pre&gt;

This is most times used in conjunction with {@link #connectionDriverName}.</description>
        </parameter>
        <parameter>
          <name>enforcePropertyRestrictions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to throw an exception when it appears that a property access entity
is not obeying the restrictions placed on property access.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of excludes to scan searchDir to pass to the jobs.
This option may be used to stop OpenJPA tasks from scanning non-JPA classes
(which usually leads to warnings such as &quot;Type xxx has no metadata&quot;)</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would get skipped usually.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of includes to scan searchDir to pass to the jobs.
This may be used to restrict the OpenJPA tasks to e.g. a single package which
contains all the entities.</description>
        </parameter>
        <parameter>
          <name>persistenceUnitName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional PersistenceUnit name.
If not specified then OpenJPA will run against &apos;all anchors&apos;.
Means it will use all persistenceunits of all persistence.xml files it finds.</description>
        </parameter>
        <parameter>
          <name>persistenceXmlFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Used if a non-default file location for the persistence.xml should be used
If not specified, the default one in META-INF/persistence.xml will be used.
Since openjpa-2.3.0 this can also be a resource location. In prior releases
it was only possible to specify a file location.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
        <parameter>
          <name>skipTestEnhancement</name>
          <type>boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Use this flag to skip test enhancement. It will automatically be
set if maven got invoked with the -Dmaven.test.skip=true option
because no compiled test clases are available in this case.</description>
        </parameter>
        <parameter>
          <name>testClasses</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>This is where compiled test classes go.</description>
        </parameter>
        <parameter>
          <name>testClasspathElements</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of all class path elements that will be searched for the
&lt;code&gt;persistence-enabled&lt;/code&gt; classes and resources expected by
PCEnhancer.</description>
        </parameter>
        <parameter>
          <name>tmpClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tell the PCEnhancer to use a temporary classloader for enhancement.
If you enable this feature, then no depending artifacts from the classpath will be used!
Please note that you have to disable the tmpClassLoader for some cases in OpenJPA-1.2.1
due to an extended parsing strategy.</description>
        </parameter>
        <parameter>
          <name>toolProperties</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional properties passed to the OpenJPA tools.</description>
        </parameter>
        <parameter>
          <name>workDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The working directory for putting persistence.xml and
other stuff into if we need to.</description>
        </parameter>
      </parameters>
      <configuration>
        <addDefaultConstructor implementation="boolean" default-value="true"/>
        <classes implementation="java.io.File" default-value="${project.build.outputDirectory}">${openjpa.classes}</classes>
        <compileClasspathElements implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <enforcePropertyRestrictions implementation="boolean" default-value="false"/>
        <forceMojoExecution implementation="boolean" default-value="false">${forceOpenJpaExecution}</forceMojoExecution>
        <includes implementation="java.lang.String" default-value="**/*.class"/>
        <persistenceUnitName implementation="java.lang.String" default-value="${openjpa.persistenceUnitName}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false"/>
        <skipTestEnhancement implementation="boolean" default-value="${maven.test.skip}"/>
        <testClasses implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <testClasspathElements implementation="java.util.List" default-value="${project.testClasspathElements}"/>
        <tmpClassLoader implementation="boolean" default-value="false"/>
        <workDir implementation="java.io.File" default-value="${project.build.directory}/openjpa-work">${openjpa.workdir}</workDir>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-builder-support</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>18.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <type>jar</type>
      <version>4.0</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>2.10</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-kernel</artifactId>
      <type>jar</type>
      <version>3.1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-lib</artifactId>
      <type>jar</type>
      <version>3.1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <type>jar</type>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.serp</groupId>
      <artifactId>serp</artifactId>
      <type>jar</type>
      <version>1.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jms_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jta_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <type>jar</type>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-asm8-shaded</artifactId>
      <type>jar</type>
      <version>4.17</version>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-jdbc</artifactId>
      <type>jar</type>
      <version>3.1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-persistence</artifactId>
      <type>jar</type>
      <version>3.1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-persistence-jdbc</artifactId>
      <type>jar</type>
      <version>3.1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jpa_2.2_spec</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-validation_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.bval</groupId>
      <artifactId>org.apache.bval.bundle</artifactId>
      <type>jar</type>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <type>jar</type>
      <version>2.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <type>jar</type>
      <version>2.11.1</version>
    </dependency>
  </dependencies>
</plugin>